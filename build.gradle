buildscript {
  repositories {
    mavenLocal()
    jcenter()
  }
}
plugins {
  id 'org.springframework.boot' version '2.1.5.RELEASE'
}

apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'


group = 'com.foilen'
version = System.getenv('VERSION')?:'master-SNAPSHOT'

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
  maven {
    url 'https://dl.bintray.com/foilen/maven'
  }
}

sourceCompatibility = 1.11

eclipse {
  classpath {
    downloadSources = true
    downloadJavadoc = true
  }
}

configurations {
  testCompile.extendsFrom compileOnly
}

dependencies {

  // Internal API
  compile ("com.foilen:foilen-infra-api:$foilenInfraApiVersion")
  compile "com.foilen:foilen-infra-system-core-system-common:$foilenInfraSystemVersion"
  compileOnly "com.foilen:foilen-infra-plugins-core:$foilenInfraPluginsCoreVersion"

  // Databases
  compile "mysql:mysql-connector-java"
  implementation "org.springframework.boot:spring-boot-starter-data-jpa"
  implementation "org.springframework.boot:spring-boot-starter-jdbc"
  
  // Emails
  compile 'com.sun.mail:javax.mail'
  compile 'javax.activation:activation'

  // Web
  compile "com.foilen:foilen-login-api:$foilenLoginApiVersion"
  implementation "org.springframework.boot:spring-boot-starter-freemarker"
  implementation "org.springframework.boot:spring-boot-starter-web"
  compile "org.webjars:bootstrap:3.3.7-1"
  compile "org.webjars:typeaheadjs:0.11.1"

  // Spring
  compile "org.springframework:spring-context"
  compile "org.springframework.retry:spring-retry"
  compile 'org.springframework.security:spring-security-web'

  // Misc
  compile "args4j:args4j:$argsVersion"
  compile 'com.google.code.findbugs:jsr305:3.0.0'
  compile 'org.apache.commons:commons-text:1.6'
  compile "javax.xml.bind:jaxb-api"
  compile 'org.quartz-scheduler:quartz'

  // Test
  testCompile "com.foilen:foilen-infra-system-core-system-junits:$foilenInfraSystemVersion"
  testCompile "com.h2database:h2"
  testCompileOnly 'junit:junit'
  testImplementation "org.junit.jupiter:junit-jupiter-api"
  testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
  testCompile "org.springframework:spring-test"
  testCompile "org.springframework.boot:spring-boot-starter-test"
  testCompile "com.foilen:foilen-infra-resource-example:0.3.0"
  testCompile "com.foilen:foilen-infra-resource-example-failing:0.3.0"
  testCompile "com.foilen:foilen-infra-resource-testing-controller:0.3.1"
  
}

test {
  useJUnitPlatform()
}


apply plugin: 'application'
mainClassName = 'com.foilen.infra.ui.InfraUiApp'
startScripts {
  unixStartScriptGenerator.template = resources.text.fromFile('scripts/customUnixStartScript.txt')
}
jar {
  enabled = true
}

bootJar {
 classifier = 'boot'
}
